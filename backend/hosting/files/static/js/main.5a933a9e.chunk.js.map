{"version":3,"sources":["components/RealmApp.js","components/MoreInfo.js","utils.js","hooks/useErrorAlert.js","components/WelcomePage.js","colors.js","components/Theme.js","components/AppName.js","components/Images/home1.png","components/Images/home2.png","components/Images/buy.png","components/Hotels.js","components/Search.js","components/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["createRealmApp","id","Realm","baseUrl","RealmAppContext","React","createContext","RealmAppProvider","appId","children","useState","realmApp","setRealmApp","useEffect","currentUser","setCurrentUser","logIn","useCallback","credentials","a","logOut","removeUser","realmAppContext","useMemo","Provider","value","useRealmApp","useContext","Error","MoreInfoItem","Container","style","textAlign","padding","marginTop","MoreInfoTemplateAndDocs","Link","target","href","toggleBoolean","prev","Alert","props","elevation","variant","ErrorAlert","isOpen","message","onClose","severity","WelcomePage","isSignup","setIsSignup","noErrors","email","password","other","error","setError","clearErrors","NonAuthErrorAlert","clearError","hideAfterMs","showErrorAlert","setShowErrorAlert","clearErrorAlert","timeout","setTimeout","clearTimeout","useErrorAlert","prevError","showPassword","setShowPassword","onFormSubmit","emailPasswordAuth","registerUser","emailPassword","handleAuthenticationError","maxWidth","className","Card","onSubmit","e","preventDefault","formData","FormData","Object","fromEntries","entries","Typography","component","gutterBottom","TextField","name","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","Button","color","err","handleUnknownError","console","warn","statusCode","colors","blue","500","A400","green","purple","orange","red","themeConfig","palette","primary","secondary","theme","createMuiTheme","ThemeProvider","AppName","styles","paperContainer","maxHeight","overflow","backgroundImage","SimplePaper","Box","sx","display","flexWrap","m","width","height","Paper","alt","src","iconPic","iconLabel","Hotels","summary","images","link","host","reviews","align","Grid","container","spacing","item","xs","buy","home1","home2","paperColor","host_thumbnail_url","borderRadius","host_name","host_location","host_about","splice","map","i","md","reviewer_name","comments","_id","Search","filteredHotels","setFilteredHotels","log","fetch","method","JSON","stringify","response","json","data","loadData","index","picture_url","listing_url","Home","searchInput","setSearchInput","placeholder","onChange","AppWithRealm","App","AppBar","Toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a933a9e.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport { baseUrl } from \"../realm.json\";\n\nfunction createRealmApp(id) {\n  return new Realm.App({ id, baseUrl });\n}\n\nconst RealmAppContext = React.createContext(null);\n\nexport function RealmAppProvider({ appId, children }) {\n  // Store Realm.App in React state. If appId changes, all children will rerender and use the new realmApp.\n  const [realmApp, setRealmApp] = React.useState(createRealmApp(appId));\n  React.useEffect(() => {\n    setRealmApp(createRealmApp(appId));\n  }, [appId]);\n  // Store the app's current user in state and wrap the built-in auth functions to modify this state\n  const [currentUser, setCurrentUser] = React.useState(realmApp.currentUser);\n  // Wrap the base logIn function to save the logged in user in state\n  const logIn = React.useCallback(\n    async (credentials) => {\n      await realmApp.logIn(credentials);\n      setCurrentUser(realmApp.currentUser);\n    },\n    [realmApp]\n  );\n  // Wrap the current user's logOut function to remove the logged out user from state\n  const logOut = React.useCallback(async () => {\n    await currentUser?.logOut();\n    await realmApp.removeUser(currentUser);\n    setCurrentUser(realmApp.currentUser);\n  }, [realmApp, currentUser]);\n\n  // Override the App's currentUser & logIn properties + include the app-level logout function\n  const realmAppContext = React.useMemo(() => {\n    return { ...realmApp, currentUser, logIn, logOut };\n  }, [realmApp, currentUser, logIn, logOut]);\n\n  return (\n    <RealmAppContext.Provider value={realmAppContext}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n}\n\nexport function useRealmApp() {\n  const realmApp = React.useContext(RealmAppContext);\n  if (!realmApp) {\n    throw new Error(\n      `No Realm App found. Make sure to call useRealmApp() inside of a <RealmAppProvider />.`\n    );\n  }\n  return realmApp;\n}\n","import { Container, Link } from \"@material-ui/core\";\n\nexport function MoreInfo() {\n  return (\n    <>\n      <MoreInfoTemplateAndDocs />\n    </>\n  );\n}\n\nfunction MoreInfoItem({ children }) {\n  return (\n    <Container\n      style={{ textAlign: \"center\", padding: \"14px 0\", marginTop: \"auto\" }}\n    >\n      {children}\n    </Container>\n  );\n}\n\nexport function MoreInfoTemplateAndDocs() {\n  return (\n    <MoreInfoItem>\n      <span>Built with MongoDB Realm, ❤️ and ☕️ by Ayushi</span> |{\" \"}\n      <Link target=\"_blank\" href=\"https://docs.mongodb.com/realm\">\n        Docs\n      </Link>\n    </MoreInfoItem>\n  );\n}","export const toggleBoolean = (prev) => !prev;\n\nconst isValidArrayIndex = (arr, idx) => {\n  return !(idx < 0 || idx >= arr.length);\n};\n\nexport function addValueAtIndex(arr, idx, value) {\n  if (!isValidArrayIndex(arr, idx) && idx !== arr.length) {\n    throw new Error(`Cannot add value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), value, ...arr.slice(idx)];\n}\n\nexport function replaceValueAtIndex(arr, idx, newValue) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot replace value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), newValue, ...arr.slice(idx + 1)];\n}\n\nexport function updateValueAtIndex(arr, idx, updater) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot update value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), updater(arr[idx]), ...arr.slice(idx + 1)];\n}\n\nexport function removeValueAtIndex(arr, idx) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot remove value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), ...arr.slice(idx + 1)];\n}\n\nexport const isSameTodo = (todo1, todo2) =>\n  String(todo1?._id) === String(todo2?._id);\n\nexport const getTodoIndex = (todos, todo) => {\n  const idx = todos.findIndex((t) => isSameTodo(t, todo));\n  return idx >= 0 ? idx : null;\n};\n","import React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport function ErrorAlert({ isOpen, message, onClose = () => {} }) {\n  return isOpen ? (\n    <Alert onClose={onClose} severity=\"error\">\n      {message}\n    </Alert>\n  ) : null;\n}\n\nexport function useErrorAlert({ error, clearError, hideAfterMs }) {\n  const [showErrorAlert, setShowErrorAlert] = React.useState(false);\n  const clearErrorAlert = React.useCallback(() => {\n    clearError();\n    setShowErrorAlert(false);\n  }, [clearError]);\n\n  React.useEffect(() => {\n    if (error) {\n      setShowErrorAlert(true);\n      if (hideAfterMs) {\n        const timeout = setTimeout(() => {\n          clearErrorAlert();\n        }, hideAfterMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n    } else {\n      setShowErrorAlert(false);\n    }\n  }, [error, clearErrorAlert, hideAfterMs]);\n\n  return () => (\n    <ErrorAlert\n      isOpen={showErrorAlert}\n      message={error}\n      onClose={() => {\n        clearErrorAlert();\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport {\n  Container,\n  TextField,\n  Button,\n  IconButton,\n  Card,\n  Typography,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { useRealmApp } from \"./RealmApp\";\nimport { MoreInfoTemplateAndDocs } from \"./MoreInfo\";\nimport { toggleBoolean } from \"../utils\";\nimport { useErrorAlert } from \"../hooks/useErrorAlert\";\n\nexport function WelcomePage() {\n  const realmApp = useRealmApp();\n  // Track whether the user is logging in or signing up for a new account\n  const [isSignup, setIsSignup] = React.useState(false);\n  const toggleIsSignup = () => {\n    clearErrors();\n    setIsSignup(toggleBoolean);\n  };\n  // Authentication errors\n  const noErrors = {\n    email: null,\n    password: null,\n    other: null,\n  };\n  const [error, setError] = React.useState(noErrors);\n  const clearErrors = () => setError(noErrors);\n  const NonAuthErrorAlert = useErrorAlert({\n    error: error.other,\n    clearError: () => {\n      setError((prevError) => ({ ...prevError, other: null }));\n    },\n  });\n  // Manage password visibility\n  const [showPassword, setShowPassword] = React.useState(false);\n  const toggleShowPassword = () => setShowPassword(toggleBoolean);\n\n  const onFormSubmit = async ({ email, password }) => {\n    clearErrors();\n    try {\n      if (isSignup) {\n        await realmApp.emailPasswordAuth.registerUser(email, password);\n      }\n      await realmApp.logIn(Realm.Credentials.emailPassword(email, password));\n    } catch (err) {\n      handleAuthenticationError(err, setError);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\"  className=\"main-container\">\n      <Card className=\"auth-card\" variant=\"outlined\">\n        <form\n          className=\"auth-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const { email, password } = Object.fromEntries(formData.entries());\n            onFormSubmit({ email, password });\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n            {isSignup ? \"Sign Up\" : \"Log In\"}\n          </Typography>\n          <NonAuthErrorAlert />\n          <TextField\n            id=\"input-email\"\n            name=\"email\"\n            label=\"Email Address\"\n            variant=\"outlined\"\n            error={Boolean(error.email)}\n            helperText={error.email ?? \"\"}\n          />\n          <TextField\n            id=\"input-password\"\n            type={showPassword ? \"text\" : \"password\"}\n            name=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            error={Boolean(error.password)}\n            helperText={error.password ?? \"\"}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={toggleShowPassword}\n                    onMouseDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            {isSignup ? \"Create Account\" : \"Log In\"}\n          </Button>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => toggleIsSignup()}\n          >\n            {isSignup\n              ? \"Already have an account? Log In\"\n              : \"Sign up for an account\"}\n          </button>\n        </form>\n      </Card>\n      <MoreInfoTemplateAndDocs />\n    </Container>\n  );\n}\n\nfunction handleAuthenticationError(err, setError) {\n  const handleUnknownError = () => {\n    setError((prevError) => ({\n      ...prevError,\n      other: \"Something went wrong. Try again in a little bit.\",\n    }));\n    console.warn(\n      \"Something went wrong with a Realm login or signup request. See the following error for details.\"\n    );\n    console.error(err);\n  };\n  if (err instanceof Realm.MongoDBRealmError) {\n    const { error, statusCode } = err;\n    const errorType = error || statusCode;\n    switch (errorType) {\n      case \"invalid username\":\n        setError((prevError) => ({\n          ...prevError,\n          email: \"Invalid email address.\",\n        }));\n        break;\n      case \"invalid username/password\":\n      case \"invalid password\":\n      case 401:\n        setError((prevError) => ({\n          ...prevError,\n          password: \"Incorrect password.\",\n        }));\n        break;\n      case \"name already in use\":\n      case 409:\n        setError((prevError) => ({\n          ...prevError,\n          email: \"Email is already registered.\",\n        }));\n        break;\n      case \"password must be between 6 and 128 characters\":\n      case 400:\n        setError((prevError) => ({\n          ...prevError,\n          password: \"Password must be between 6 and 128 characters.\",\n        }));\n        break;\n      default:\n        handleUnknownError();\n        break;\n    }\n  } else {\n    handleUnknownError();\n  }\n}\n","import { green, purple, orange, red, blue } from \"@material-ui/core/colors\";\n\nexport const colors = {\n  blue: {\n    ...blue,\n    500: \"#6497B1\",\n    A400: \"#6497B1\",\n  },\n  green: {\n    ...green,\n    500: \"#09804C\",\n    A400: \"#B9EACD\",\n  },\n  purple: {\n    ...purple,\n    500: \"#6200EE\",\n    A400: \"#9795F9\",\n  },\n  orange,\n  red,\n};\n","import {\n  ThemeProvider as MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core\";\nimport { colors } from \"../colors\";\n\nconst themeConfig = {\n  palette: {\n    primary: colors.blue,\n    secondary: colors.blue,\n  },\n}\n\nconst theme = createMuiTheme(themeConfig);\n\nexport function ThemeProvider({ children }) {\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const API_TYPE_NAME = \"MQL\"\n\nexport function AppName() {\n  return (\n    <Typography className=\"app-bar-title\" component=\"h1\" variant=\"h5\">\n      Travel Buddy\n    </Typography>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/home1.34865c11.png\";","export default __webpack_public_path__ + \"static/media/home2.a9687aa8.png\";","export default __webpack_public_path__ + \"static/media/buy.39333dd7.png\";","import React from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport \"./App.css\";\r\nimport Paper from '@mui/material/Paper';\r\nimport { Container } from \"@material-ui/core\";\r\nimport Box from '@mui/material/Box';\r\nimport home1 from \"./Images/home1.png\";\r\nimport home2 from \"./Images/home2.png\";\r\nimport buy from \"./Images/buy.png\";\r\n\r\nconst styles = {\r\n    paperContainer: {\r\n        maxHeight: 200, overflow: 'auto',\r\n        backgroundImage: `url(${\"https://elements-twenty20-photos-0.imgix.net/production/uploads/items/6f3c7ee4-19e6-4f87-a08e-2eb20bf9f38e/source?auto=compress%2Cformat&fit=max&mark=https%3A%2F%2Felements-assets.envato.com%2Fstatic%2Fwatermark2.png&markalign=center%2Cmiddle&markalpha=18&w=1000&s=11a4c4e5d119030d235580895a2b517c\"})`\r\n    }\r\n};\r\n\r\nfunction SimplePaper(props) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          '& > :not(style)': {\r\n            m: 1,\r\n            width: 158,\r\n            height: 145,\r\n          },\r\n        }}\r\n      >\r\n        <Paper elevation={3}>\r\n        <img alt=\"\" src={props.iconPic} width=\"150\"/>\r\n        {props.iconLabel}\r\n        </Paper>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nconst Hotels = ({name,summary,images,link,host,reviews})=>{\r\n\r\n    return(\r\n        <div style={{padding: \"5px 30px 40px 5px\"}} align=\"center\">\r\n    <Paper elevation={3}>\r\n    <Grid container spacing={1}>\r\n        <Grid item xs={12} >\r\n        <h1>{name}</h1>\r\n        <p>{summary}</p>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n        <img alt=\"Oops! No preview\" src={images}/>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n        <Box>\r\n        <SimplePaper iconPic={buy} iconLabel=\"Price\"/>\r\n        </Box>\r\n        <Box>\r\n        <SimplePaper iconPic={home1} iconLabel=\"Facilities\"/>\r\n        </Box>\r\n        <Box>\r\n        <SimplePaper iconPic={home2} iconLabel=\"Find\"/>\r\n        </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <h2>Host:</h2>\r\n            <Container style={{padding: \"10px 50px 10px 50px\"}}>\r\n            <Paper style={styles.paperColor} variant=\"outlined\" style={{padding: \"10px 50px 10px 50px\"}}>\r\n            <img alt=\"👤\" src={host.host_thumbnail_url} style={{borderRadius:\"50%\"}}/><br/>\r\n                <b>{host.host_name}</b><br/>\r\n                <b>📍 {host.host_location}</b><br/>\r\n                {host.host_about}\r\n            </Paper>\r\n            </Container>\r\n            <h2>Reviews:</h2>\r\n            <Container style={{padding: \"10px 50px 10px 50px\"}}>\r\n            <Paper variant=\"outlined\" style={styles.paperContainer} align=\"left\">\r\n                {\r\n                    reviews.splice(0,10).map((i)=>{\r\n                        return(\r\n                        <Grid container spacing={2} key={i._id}>\r\n                            <Grid item xs={6} md={1} align=\"center\">\r\n                              <div>\r\n                             <img alt=\"\" src=\"https://www.freeiconspng.com/thumbs/profile-icon-png/account-profile-user-icon--icon-search-engine-10.png\" width=\"30\" height=\"30\"/><br/>\r\n                             {i.reviewer_name}\r\n                              </div>\r\n                            </Grid>\r\n                            <Grid item xs={6} md={11}>\r\n                              <div>{i.comments}</div>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <hr/>\r\n                            </Grid>\r\n                        </Grid>\r\n                        );\r\n                    }\r\n                    )\r\n                }\r\n            </Paper>\r\n            </Container>\r\n            <Paper variant=\"outlined\">\r\n                {link}\r\n            </Paper>\r\n        </Grid>\r\n    </Grid>\r\n    </Paper>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Hotels;\r\n\r\n//src={host.host_thumbnail_url}\r\n//src=\"https://static.vecteezy.com/system/resources/thumbnails/000/550/731/small/user_icon_004.jpg\"\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Hotels from './Hotels';\r\n\r\nexport default function Search(props) {\r\n\r\n    let [filteredHotels, setFilteredHotels] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const loadData = async(props) =>{\r\n            console.log(\"My Props: \" ,props.item);\r\n            const response = await fetch(\"https://winterhack-searchapp.herokuapp.com/search\",\r\n            {\r\n                method: \"POST\",\r\n                \"headers\":{\r\n                    \"content-type\":\"application/json\"\r\n                },\r\n                \"body\": JSON.stringify({\r\n                    \"query\": props.item,\r\n                    \"position\":{\r\n                        \"lng\": -74.0060,\r\n                        \"lat\": 40.7128\r\n                    }\r\n                })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            if(data.statusCode===500)\r\n                setFilteredHotels([]);\r\n            else\r\n            setFilteredHotels(data);\r\n        }\r\n        loadData(props);\r\n        // eslint-disable-next-line\r\n    },[props.item]);\r\n\r\n    return (\r\n    <div>\r\n        <h1>Searching for ... {props.item}</h1>\r\n        {\r\n        filteredHotels.map((index,_id)=>(\r\n            <Hotels key={_id} name={index.name} summary={index.summary} images={index.images.picture_url}\r\n            link={index.listing_url} host={index.host} reviews={index.reviews}\r\n            />\r\n        ))\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\n","import './App.css';\r\nimport { useState } from 'react';\r\nimport Search from './Search.js';\r\n\r\nexport default function Home() {\r\n\r\n    const [searchInput, setSearchInput] = useState('a');\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"App-header\">\r\n            <p>Search for hotels:</p>\r\n            <input type=\"text\"\r\n            value={searchInput}\r\n            placeholder=\"Enter preference\"\r\n            onChange={(e) => {\r\n            setSearchInput(e.target.value)}\r\n            } />\r\n        </div>\r\n        <div style={{padding: \"25px 30px 75px 100px\"}}>\r\n            <Search item={searchInput}/>\r\n        </div>\r\n        </div>\r\n        )\r\n}\r\n","import { AppBar, Toolbar, Button, Typography } from \"@material-ui/core\";\nimport { WelcomePage } from \"./WelcomePage\";\nimport { RealmAppProvider, useRealmApp } from \"./RealmApp\";\nimport { ThemeProvider } from \"./Theme\";\nimport { AppName } from \"./AppName\";\nimport { appId } from \"../realm.json\";\nimport Home from './Home';\nimport \"./App.css\";\n\n\nexport default function AppWithRealm() {\n  return (\n    <ThemeProvider>\n      <RealmAppProvider appId={appId}>\n        <App />\n      </RealmAppProvider>\n    </ThemeProvider>\n  );\n}\n\nfunction App() {\n  const { currentUser, logOut } = useRealmApp();\n  return (\n    <div className=\"App\">\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <AppName />\n          {currentUser ? (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={async () => {\n                await logOut();\n              }}\n            >\n              <Typography variant=\"button\">Log Out</Typography>\n            </Button>\n          ) : null}       \n        </Toolbar>\n      </AppBar>\n      {currentUser ? <Home /> : <WelcomePage />}\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}